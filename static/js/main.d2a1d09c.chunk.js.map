{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","highscore","App","state","cards","gameOver","_this","setState","console","log","this","forEach","card","count","alert","find","o","i","sort","Math","random","_this2","components_Wrapper_Wrapper","components_Header_Header","map","components_Card_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"8nCAceA,SATF,SAAAC,GAAK,OACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,WAAWN,EAAMO,MACxDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCC9BC,SAJC,SAAAZ,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCSrBC,SAVA,SAAAd,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMa,UAC9BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACYJ,EAAMe,MADlB,eACqCf,EAAMgB,qBCgEpCC,6MA9DbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,UAAW,KAIbI,SAAW,WAYT,OAVIC,EAAKH,MAAMH,MAAQM,EAAKH,MAAMF,WAChCK,EAAKC,SAAS,CAACN,UAAWK,EAAKH,MAAMH,OAAQ,WAC3CQ,QAAQC,IAAIC,KAAKP,MAAMF,aAG3BK,EAAKH,MAAMC,MAAMO,QAAQ,SAAAC,GACvBA,EAAKC,MAAQ,IAEfC,MAAM,0BAA4BR,EAAKH,MAAMH,OAC7CM,EAAKC,SAAS,CAACP,MAAO,KACf,KAITT,WAAa,SAAAC,GACXc,EAAKH,MAAMC,MAAMW,KAAK,SAACC,EAAGC,GACxB,GAAID,EAAExB,KAAOA,EAAI,CACf,GAAsB,IAAnBY,EAAMa,GAAGJ,MAMV,OALAT,EAAMa,GAAGJ,MAAQT,EAAMa,GAAGJ,MAAQ,EAClCP,EAAKC,SAAS,CAACP,MAAQM,EAAKH,MAAMH,MAAQ,GAAI,WAC5CQ,QAAQC,IAAIC,KAAKP,MAAMH,SAEzBM,EAAKH,MAAMC,MAAMc,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EAGPd,EAAKD,WAGT,OAAO,6EAMX,IAAAgB,EAAAX,KACE,OACExB,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAD,CAAQvB,MAAOU,KAAKP,MAAMH,MAAOC,UAAWS,KAAKP,MAAMF,WAAvD,0BACCS,KAAKP,MAAMC,MAAMoB,IAAI,SAAAZ,GAAI,OACxB1B,EAAAC,EAAAC,cAACqC,EAAD,CACElC,WAAY8B,EAAK9B,WACjBC,GAAIoB,EAAKpB,GACTkC,IAAKd,EAAKpB,GACVI,MAAOgB,EAAKhB,kBAvDN+B,aCDlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d2a1d09c.chunk.js","sourcesContent":["// Import the required files and dependencies\nimport React from \"react\";\nimport \"./Card.css\";\n\n// Set up card layout using props\nconst Card = props => (\n    <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n        <div className=\"img-container\">\n            <img alt={props.name} src={props.image} />\n        </div>\n    </div>\n);\n\n// Export the Cards\nexport default Card;","// Import the dependencies and other files needed\nimport React from \"react\";\nimport \"./Wrapper.css\";\n\n// Set up the Wrapper using props\nconst Wrapper = props => \n    <div className=\"wrapper\">{props.children}</div>;\n\n// Export Wrapper\nexport default Wrapper;","// Import the required dependencies and files\nimport React from \"react\";\nimport \"./Header.css\";\n\n// Set up the header for the clicky game app using props\nconst Header = props => (\n    <div className=\"header\">\n        <div className=\"title\">{props.children}</div>\n        <div className=\"scores\">\n            Score: {props.score} Highscore: {props.highscore}\n        </div>\n    </div>\n);\n\n// Export the Header to the app\nexport default Header;","// Required imports for application\nimport React, { Component } from 'react';\nimport Card from './components/Card';\nimport Wrapper from './components/Wrapper';\nimport Header from './components/Header';\n//import Navbar from \"./components/Navbar\";\nimport cards from \"./cards.json\";\n\n\nclass App extends Component {\n  // Setting the this.cards.state according to the cards json objects in the application\n  state = {\n    cards,\n    score: 0,\n    highscore: 0,\n  };\n\n  // Establishes the rules for when the game is over and alerts the user\n  gameOver = () => \n  {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    })\n    alert('Game Over : ( \\nscore: ' + this.state.score);\n    this.setState({score: 0});\n    return true;\n  }\n\n  // Counts the clicks and tracks the score of the game by card objects id\n  clickCount = id => {\n    this.state.cards.find((o, i) => {\n      if (o.id === id) {\n        if(cards[i].count === 0) {\n          cards[i].count = cards[i].count + 1;\n          this.setState({score : this.state.score + 1}, function(){\n            console.log(this.state.score);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true; \n        } \n        else {\n          this.gameOver();\n        }\n      }\n      return false;\n    });\n  }\n\n  // Map and render a cards components for each card object\n  render() \n  {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>Lego Movie Clicky Game</Header>\n        {this.state.cards.map(card => (\n          <Card \n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\n// Export the App\nexport default App;\n","// Imports needed for application\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n// Render the application page under the root file\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}